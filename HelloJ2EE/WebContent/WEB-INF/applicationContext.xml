<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd"> 
     <!-- 数据库连接 --> 
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
        destroy-method="close"> 
        <property name="driverClassName"> 
            <value>com.mysql.jdbc.Driver</value> 
        </property> 
 
        <property name="url"> 
            <value>jdbc:mysql://localhost:3306/sensor?characterEncoding=utf8</value> 
        </property> 
 
        <property name="username"> 
            <value>webdev2</value> 
        </property> 
 
        <property name="password"> 
            <value>123456</value> 
        </property> 
    </bean> 
 
    <!--Hibernate的Spring配置 --> 
    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
        <!-- 数据库连接 --> 
        <property name="dataSource"> 
            <ref local="dataSource" /> 
        </property> 
 
        <!-- hibernate自身属性 --> 
        <property name="hibernateProperties"> 
            <props> 
                <prop key="hibernate.show_sql">true</prop> 
                <prop key="hibernate.format_sql">true</prop> 
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop> 
                <!-- 解决no session found --> 
			    <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
            </props> 
        </property> 
 
        <!-- 映射文件 --> 
	<property name="mappingResources">
		<list>
			<value>com/example/sensoclient/model/hibernate/SensorTempData.hbm.xml</value>
		</list>
	</property>
    </bean> 
    
    <bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		abstract="false" lazy-init="default" autowire="default">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
<property name="dataSource" ref="dataSource" /> 
</bean> 
<tx:advice id="baseServiceAdvice" transaction-manager="transactionManager">
   <tx:attributes>
      <tx:method name="get*" read-only="true" propagation="REQUIRED"/><!--之前是NOT_SUPPORT-->
      <tx:method name="find*" read-only="true" propagation="REQUIRED"/><!--之前是NOT_SUPPORT-->
      <tx:method name="save*" propagation="REQUIRED"/>
      <tx:method name="update*" propagation="REQUIRED"/>
      <tx:method name="remove*" propagation="REQUIRED"/>
      <tx:method name="add*" propagation="REQUIRED"/>
      <!--默认其他方法都是REQUIRED-->
      <tx:method name="*"/>
   </tx:attributes>
</tx:advice>
<tx:annotation-driven/>

 
    <!-- 用户Dao --> 
    <bean id="sensorDao" class="com.example.sensoclient.dao.hbm.SensorTempDataDAOHbm" 
        scope="singleton"> 
        <property name="sessionFactory"> 
            <ref local="sessionFactory" /> 
        </property> 
    </bean> 
 
    <!-- 用户Service --> 
    <bean id="testMgr" class="com.example.sensoclient.manager.impl.TestMgrImpl" 
        scope="singleton"> 
        <property name="sensorDao"> 
            <ref local="sensorDao" /> 
        </property> 
    </bean>
    
     <bean id="testSensorDataMgr" class="com.example.sensoclient.manager.impl.TestSensorDataMgrImpl" 
        scope="singleton"> 
        <property name="sensorDao"> 
            <ref local="sensorDao" /> 
        </property> 
    </bean> 
 
    <!-- Action --> 
    <bean id="testDaoAction" class="com.example.sensoclient.action.TestDaoAction" 
        scope="prototype"> 
        <property name="testMgr"> 
            <ref local="testMgr" /> 
        </property> 
    </bean> 
     <bean id="testLoginAction" class="com.example.sensoclient.action.TestLoginAction" 
        scope="prototype"> 
        <!--property name="testMgr"> 
            <ref local="testMgr" /> 
        </property--> 
    </bean>
    
     <bean id="testSensorDataAction" class="com.example.sensoclient.action.android.TestSensorDataAction" 
        scope="prototype"> 
        <property name="testSensorDataMgr"> 
            <ref local="testSensorDataMgr" /> 
        </property> 
    </bean> 
</beans> 